diff --git a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -14,15 +14,19 @@ include(GNUInstallDirs)
 #---------------------------------------------------------------------------------------
 set(CMAKE_CXX_STANDARD 11)
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
+set(CMAKE_CXX_EXTENSIONS OFF)
 
 if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU" OR "${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang")
     set(CMAKE_CXX_FLAGS "-Wall -O3 ${CMAKE_CXX_FLAGS}")
 endif()
 
+include(cmake/sanitizers.cmake)
+
 #---------------------------------------------------------------------------------------
 # spdlog target
 #---------------------------------------------------------------------------------------
 add_library(spdlog INTERFACE)
+add_library(spdlog::spdlog ALIAS spdlog)
 
 option(SPDLOG_BUILD_EXAMPLES "Build examples" OFF)
 cmake_dependent_option(SPDLOG_BUILD_TESTING
diff --git a/example/CMakeLists.txt b/example/CMakeLists.txt
--- a/example/CMakeLists.txt
+++ b/example/CMakeLists.txt
@@ -24,10 +24,7 @@
 cmake_minimum_required(VERSION 3.1)
 project(SpdlogExamples CXX)
 
-if(TARGET spdlog)
-  # Part of the main project
-  add_library(spdlog::spdlog ALIAS spdlog)
-else()
+if(NOT TARGET spdlog)
   # Stand-alone build
   find_package(spdlog CONFIG REQUIRED)
 endif()
@@ -37,13 +34,10 @@ find_package(Threads REQUIRED)
 add_executable(example example.cpp)
 target_link_libraries(example spdlog::spdlog Threads::Threads)
 
-add_executable(benchmark bench.cpp)
-target_link_libraries(benchmark spdlog::spdlog Threads::Threads)
-
 add_executable(multisink multisink.cpp)
 target_link_libraries(multisink spdlog::spdlog Threads::Threads)
 
 enable_testing()
 file(MAKE_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/logs")
-add_test(NAME RunExample COMMAND example)
-add_test(NAME RunBenchmark COMMAND benchmark)
+add_test(NAME example COMMAND example)
+add_test(NAME multisink COMMAND multisink)
diff --git a/example/multisink.cpp b/example/multisink.cpp
--- a/example/multisink.cpp
+++ b/example/multisink.cpp
@@ -1,4 +1,4 @@
-#include "spdlog/sinks/file_sinks.h"
+#include "spdlog/sinks/basic_file_sink.h"
 #include "spdlog/sinks/stdout_sinks.h"
 #include "spdlog/spdlog.h"
 #include <iostream>
